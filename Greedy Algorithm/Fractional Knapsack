class Solution
{
    public:
    static bool cmp(pair<double, Item> a, pair<double, Item> b){
        return a.first>b.first;
    }
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        vector<pair<double, Item>> v;
        for(int i=0;i<n;i++){
            double per=(1.0)*arr[i].value/arr[i].weight;
            v.push_back({per, arr[i]});
        }
        
        sort(v.begin(), v.end(), cmp);
        
        double total_value=0;
        for(int i=0;i<n;i++){
            if(v[i].second.weight>W){
                total_value=total_value+W*v[i].first;
                W=0;
            }
            else{
                total_value=total_value+v[i].second.value;
                W=W-v[i].second.weight;
            }
        }
    
        return total_value;
    }
        
};
