bool areAnagrams(Node *root1, Node *root2)
    {
        if(root1==NULL && root2==NULL){
            return true;
        }
        if(root1==NULL || root2==NULL){
            return false;
        }
        
        queue<Node*> q1, q2;
        q1.push(root1);
        q2.push(root2);
        
        unordered_map<int, int> m;
        
        while(!q1.empty() && !q2.empty()){
            int n1=q1.size();
            int n2=q2.size();
            if(n1!=n2){
                return false;
            }
            if(n1==0){
                break;
            }
            
            while(n1--){
                Node* temp=q1.front();
                q1.pop();
                m[temp->data]++;
                
                if(temp->left!=NULL){
                    q1.push(temp->left);
                }
                if(temp->right!=NULL){
                    q1.push(temp->right);
                }
            }
            
            while(n2--){
                Node* temp=q2.front();
                q2.pop();
                if(m.find(temp->data)==m.end()){
                    return false;
                }
                
                m[temp->data]--;
                
                if(m[temp->data]==0){
                    m.erase(temp->data);
                }
                
                if(temp->left!=NULL){
                    q2.push(temp->left);
                }
                if(temp->right!=NULL){
                    q2.push(temp->right);
                }
            }
            
            if(m.size()>0){
                return false;
            }
        }
        if(q1.empty() && q2.empty()){
            return true;
        }
        return false;
    }
